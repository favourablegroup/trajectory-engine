<!DOCTYPE html>
<html>
<head>
    <title>Trajectory Engine</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 90vh;
            margin: 0;
            color:#fff;
            background-color: #232323; /* Grey background */
            font-family: Arial, sans-serif;
        }
    
        #scores, #negotiation, #action, #result, #modal {
            text-align: center;
            width: 100%;
            max-width: 600px; /* Adjust based on your preference */
        }
    
        button {
            background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white */
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
            font-size: 16px;
            padding: 10px 20px;
            transition: background-color 0.3s ease;
            align-content: center;
        }
        #downloadButton {
            position: absolute;
            display: grid;
            margin:20px;
        }
    
        button:hover {
            background-color: rgba(255, 255, 255, 0.2); /* Slightly darker on hover */
        }
        #modal {
            display: none;
            align-items: center;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            min-width: 100%;
            width: 100vw; /* Use 100% of the viewport width */
            height: 100vh; /* Use 100% of the viewport height */
            overflow: auto; /* Enable scrolling if content overflows */
            margin: 0;
            padding: 0;
            background: rgba(0,0,0,0.5);
            font-size: 15px;
        }

        #modal div {
            background-color: #232323;
            margin: 15% auto; /* Center the content */
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Adjust the width to fit the modal's dimensions */
            max-width: 520px; /* Ensure it doesn't exceed a certain width */
            border-radius: 10px; /* Rounded corners for a glass effect */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
            max-height: 450px; /* Set a maximum height for the modal content */
            overflow-y: auto; /* Enable vertical scrolling within the modal content */
        }
    
        #winner {
            font-size: 15px;
            font-weight: bold;
            margin-top: 20px;
        }
        /* width */
        ::-webkit-scrollbar {
        width: 10px;
        }

        /* Track */
        ::-webkit-scrollbar-track {
        background: #202020;
        }

        /* Handle */
        ::-webkit-scrollbar-thumb {
        background: #353535;
        }
        #result {
            font-size: 10px;
            font-weight: bold;
            margin-top: 20px;
            background: #202020;
            display: flex; /* Use Flexbox to arrange children in a row */
            flex-wrap: wrap; /* Allow items to wrap onto multiple lines */
            justify-content: center; /* Distribute items evenly */
            width: 100%; /* Ensure the #result div takes the full width of its container */
            max-height: 515px; /* Set a maximum height */
            overflow-y: auto; /* Enable vertical scrolling */
            box-sizing: border-box; /* Include padding and border in the element's total width */
        }

        #result div {
            width: 45%; /* Each code will take up approximately half the width of the #result div */
            box-sizing: border-box; /* Include padding and border in the element's total width */
            padding: 10px; /* Adjust padding as needed */
            border: 1px solid #888; /* Optional: Add a border around each code for better separation */
            margin: 5px; /* Adjust margin as needed */
        }

        .greenCircle {
            width: 20px;
            height: 20px;
            background-color: green;
            border-radius: 50%;
            margin: 5px;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5); /* 50% opacity black */
            z-index: 1; /* Ensure it's above other content */
        }

        .modal-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
            background-color:#202020;
        }

        nav {
            list-style-type: none;
            padding: 10px;
        }

        nav li {
            padding: 10px 20px;
            text-decoration: none;
            color: white!important;
        }

        nav li:hover {
            background-color: #666;
        }
    </style>
</head>
<body>
    <h1>Welcome to the Fractal Tournament!</h1>
            <!-- Modal Trigger Button -->
            <button id="menuButton">Menu</button>
            <!-- Modal Structure -->
            <div id="modal" class="modal">
                <div class="modal-content">
                    <nav>
                        <ul>
                            <li><a href="index.htm" style="color:#ffffff">Fractal Tournament</a></li>
                            <li><a href="results-display.htm" style="color:#ffffff">Results Display</a></li>
                            <li><a href="results-prize-totals.htm" style="color:#ffffff">Results Prize Totals</a></li>
                            <li><a href="results-prize-ratios.htm" style="color:#ffffff">Results Prize Ratios</a></li>
                        </ul>
                    </nav>
                </div>
            </div>    
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const menuButton = document.getElementById('menuButton');
                const modal = document.getElementById('modal');
                const closeButton = document.createElement('button');
                closeButton.textContent = 'Close';
                closeButton.addEventListener('click', function() {
                    modal.style.display = 'none';
                });
            
                menuButton.addEventListener('click', function() {
                    modal.style.display = 'block';
                });
            
                // Append the close button to the modal content
                modal.querySelector('.modal-content').appendChild(closeButton);
            });
        </script>
    <p>Here your fractal trajectories are created.</p>

    <div id="scores">
        <!-- Scores will be dynamically updated here -->
    </div>

    <div id="negotiation">
        <p>Are you ready? Click Begin</p>
        <button id="readyButton">Begin</button>
    </div>

    <div id="greenCircles" style="display:none; position:fixed; top:20px; right:20px;">
        <div class="greenCircle"></div>
        <div class="greenCircle"></div>
    </div>

    <div id="action" style="display:none;">
        <p>Perform your Gratitude / Set your intention - press “Let's Go!”</p>
        <button id="actionButton">Let's Go!</button>
    </div>

    <div id="result"></div>

    <!-- Example winner display -->
    <div id="winner"></div>

    <div id="modal" style="display:none; position:fixed; z-index:1000; left:0; top:0; width:100%; height:100%; overflow:auto; margin:0px; padding:0px; background: rgba(0,0,0,0.5);">
        <div style="background-color: #232323; margin: 15% auto; padding:20px; border:1px solid #888; width:50%;">
            <p id="countdown">70</p>
            <p id="entryCodes"></p> <!-- Entry code display -->
        </div>
    </div>

<script>
    function generateEntryCode() {
        var sources = [
            ["1x0",  "1x1",  "1x2" ],
            ["1y3",  "1y4",  "1y5" ],
            ["1z6",  "1z7",  "1z8" ],
            ["2x9",  "2x10", "2x11"],
            ["2y12", "2y13", "2y14"],
            ["2z15", "2z16", "2z17"],
            ["3x18", "3x19", "3x20"],
            ["3y21", "3y22", "3y23"],
            ["3z24", "3z25", "3z26"]
        ];

        var entryCode = '';
        sources.forEach(function(source, index) {
            var randomIndex = Math.floor(Math.random() * source.length);
            entryCode += source[randomIndex];
            // Add a comma if this is not the last source
            if (index < sources.length - 1) {
                entryCode += ', ';
            }
        });
        entryCode += ';';

        return entryCode;
    }

    function generateMultipleCodes(numCodes, delay) {
        if (numCodes > 0) {
            var entryCode = generateEntryCode();
            console.log('Generated code:', entryCode); // Log the generated code
            var entryCodesElement = document.getElementById('entryCodes');
            
            // Prepend the new code to the existing content
            var newCodeElement = document.createElement('div');
            newCodeElement.innerText = entryCode;
            entryCodesElement.insertBefore(newCodeElement, entryCodesElement.firstChild);

            setTimeout(function() {
                generateMultipleCodes(numCodes - 1, delay); // Recursively call to generate the next code
            }, delay);
        }
    }

    document.getElementById('readyButton').addEventListener('click', function() {
    document.getElementById('negotiation').style.display = 'none';
    document.getElementById('action').style.display = 'block';
    });

    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('actionButton').addEventListener('click', function() {
            document.getElementById('action').style.display = 'none';
            document.getElementById('modal').style.display = 'block'; // Show the modal
            var countdown = 70; // Initialize the countdown
            var countdownElement = document.getElementById('countdown');
            var countdownInterval = setInterval(function() {
                countdown--;
                countdownElement.innerText = countdown;
                if (countdown <= 0) {
                    clearInterval(countdownInterval);
                    document.getElementById('modal').style.display = 'none'; // Hide the modal

                    // Function to generate a seed code
                    function generateSeedCode() {
                        var seedCode = '';
                        for (var i = 0; i < 27; i++) {
                            var randomNumber = Math.floor(Math.random() * 9) + 1; // Generate a random number between 1 and 9
                            seedCode += randomNumber;
                        }
                        return seedCode;
                    }

                    // Generate the seed code
                    var seedCode = generateSeedCode(); // Generate the seed code

                    // Create a div for the seed code
                    var seedCodeDiv = document.createElement('div');
                    seedCodeDiv.innerText = "The seed code is: " + seedCode;
                    document.getElementById('winner').appendChild(seedCodeDiv);

                    // Append the download button to the 'winner' div
                    var downloadButton = document.createElement('button');
                    downloadButton.id = 'downloadButton';
                    downloadButton.innerText = 'Download Entry Codes and Seed Code';
                    // Append the button to the winner div
                    document.getElementById('winner').appendChild(downloadButton);

                    // Now, add the event listener to the button
                    document.getElementById('downloadButton').addEventListener('click', function() {
                        var csvContent = generateCSVContent();
                        var blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
                        var link = document.createElement("a");
                        var url = URL.createObjectURL(blob);
                        link.setAttribute("href", url);
                        link.setAttribute("download", "entry_codes_and_seed_code.csv");
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                    });

                    // Append the download button to the 'winner' div
                    document.getElementById('winner').appendChild(downloadButton);

                    // Update the result div after the modal closes
                    var resultDiv = document.getElementById('result');
                    var entryCodesElement = document.getElementById('entryCodes');
                    resultDiv.innerHTML = entryCodesElement.innerHTML; // Copy the generated codes to the result div
                }
            }, 1000);

            // Generate 60 codes with a 1-second pause between each
            generateMultipleCodes(500, 125);
        });
    });

    // Define the generateCSVContent function in the global scope
    function generateCSVContent() {
        var entryCodesElement = document.getElementById('entryCodes');
        var entryCodes = entryCodesElement.innerText.split('<br>'); // Split the entry codes by line breaks
        var seedCode = document.getElementById('winner').innerText.split(': ')[1]; // Extract the seed code from the winner display

        var csvContent = 'Entry Codes,Seed Code\n'; // CSV header
        entryCodes.forEach(function(code) {
            csvContent += '"' + code + '";' + seedCode + '\n'; // Add each entry code and the seed code to the CSV content, separated by a semicolon
        });

        return csvContent;
    }

    document.addEventListener('DOMContentLoaded', function() {
        var player1Ready = false;
        var player2Ready = false;
    
        document.getElementById('readyButton').addEventListener('click', function() {
            // Toggle player readiness
            player1Ready =!player1Ready;
            player2Ready =!player2Ready; // Assuming both players use the same button for simplicity
    
            // Check if both players are ready
            if (player1Ready && player2Ready) {
                document.getElementById('greenCircles').style.display = 'block';
            } else {
                document.getElementById('greenCircles').style.display = 'none';
            }
        });
    });
</script>
</body>
</html>
